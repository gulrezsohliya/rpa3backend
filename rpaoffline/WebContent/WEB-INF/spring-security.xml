<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
             xmlns:p="http://www.springframework.org/schema/p" 
             xmlns:util="http://www.springframework.org/schema/util"
             xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-5.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.3.xsd">
                    
    <global-method-security secured-annotations="enabled"/>
    <http auto-config="true" use-expressions="true">

        <!--<global-method-security pre-post-annotations="enabled" secured-annotations="enabled"/>-->
        <intercept-url pattern="/login.htm" access="permitAll" />
        <intercept-url pattern="/*" access="permitAll" />
        <intercept-url pattern="/*.htm" access="permitAll" />
        
		
        <!--<access-denied-handler error-page="/403.jsp"/>-->
        <session-management session-fixation-protection="migrateSession"/>
        <!--<remember-me/>-->
        <!-- <form-login/>-->
        <form-login 
        	login-page="/login.htm" 
        	default-target-url="/home.htm"
        	authentication-failure-url="/login.htm?error=1"
   	        authentication-success-handler-ref="MyAuthenticationSuccessHandler"
        />
        <logout invalidate-session="true" logout-url="/logout" logout-success-url="/login.htm?logout=1"/>
        
    </http> 
    <beans:bean id="MyAuthenticationSuccessHandler" class="rpa.Security.MyAuthenticationSuccessHandler" />
	<beans:bean id ="passwordEncoder" class = "org.springframework.security.crypto.password.NoOpPasswordEncoder" factory-method = "getInstance" />
	
    <authentication-manager alias="authenticationManager">
        <authentication-provider>
          <password-encoder ref="passwordEncoder"></password-encoder>
			<!-- <password-encoder hash="bcrypt"></password-encoder> -->
            <jdbc-user-service data-source-ref="dataSource" 
                               users-by-username-query="SELECT username, passwords as password, true AS enabled
														FROM backend.userlogins WHERE username = ?"

                               authorities-by-username-query="SELECT username, cellcode as authority
															FROM backend.userlogins
															WHERE username = ?
"/>
        </authentication-provider>
    </authentication-manager>
     

    
</beans:beans>  